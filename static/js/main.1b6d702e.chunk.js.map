{"version":3,"sources":["components/result-card/ResultCard.js","components/input-data/InputData.js","components/section-data/SectionData.js","helper/calculate.js","App.js","index.js"],"names":["formatCurrency","value","Intl","NumberFormat","style","currency","format","ResultCard","juros","mes","valorTotal","valorJuros","percentual","className","styles","card","flexRow","flexColumn","positive","negative","percentageColor","padding","color","display","alignItems","justifyContent","flexDirection","InputData","id","type","hint","label","min","max","step","prefix","suffix","isFocused","errorMessage","sucessMessage","handleInput","validation","onChange","ev","target","placeholder","autoFocus","htmlFor","undefined","data-error","data-success","SectionData","montanteInicial","taxaDeJuros","periodo","updateMontanteInicial","updateTaxaDeJuros","updatePeriodo","doCalculate","validationMaiorQueZero","button","onClick","width","calculate","capital","toFixed","App","useState","setMontanteInicial","setTaxaDeJuros","setPeriodo","sobreJuros","setSobreJuros","totalAnterior","result","console","log","useCallback","useEffect","M","AutoInit","map","index","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b6d702e.chunk.js","sourcesContent":["import React from 'react';\n\nconst formatCurrency = (value) => {\n  const format = new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL',\n  });\n  return format.format(+value);\n};\n\nexport default function ResultCard({ juros }) {\n  const { mes, valorTotal, valorJuros, percentual } = juros;\n  return (\n    <div className=\"card\" style={styles.card}>\n      <div style={styles.flexRow}>\n        <div>{mes}</div>\n        <div style={styles.flexColumn}>\n          <span style={+valorJuros > 0 ? styles.positive : styles.negative}>\n            {formatCurrency(valorTotal)}\n          </span>\n          <span style={+valorJuros > 0 ? styles.positive : styles.negative}>\n            {formatCurrency(valorJuros)}\n          </span>\n          <span\n            style={+valorJuros > 0 ? styles.percentageColor : styles.negative}\n          >\n            {percentual}%\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  card: {\n    padding: '10px',\n  },\n  positive: {\n    color: 'green',\n  },\n  negative: {\n    color: 'red',\n  },\n  percentageColor: {\n    color: 'blue',\n  },\n  flexRow: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n\n  flexColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n};\n\n/**\n * // <div className=\"row\">\n    //   <div className=\"col\">{mes}</div>\n    //   <div className=\"col\">\n    //     <div className=\"row\">\n    //       <div className=\"row\">{valorTotal}</div>\n    //       <div className=\"row\">{valorJuros}</div>\n    //       <div className=\"row\">{percentual}</div>\n    //     </div>\n    //   </div>\n    // </div>\n */\n","import React from 'react';\n\nexport default function InputData({\n  id,\n  className,\n  type,\n  value,\n  hint,\n  label,\n  min,\n  max,\n  step,\n  prefix = '',\n  suffix = '',\n  isFocused = false,\n  errorMessage = '',\n  sucessMessage = '',\n  handleInput = () => {},\n  validation = () => {},\n}) {\n  const handleOnChange = (ev) => {\n    const value = ev.target.value;\n    handleInput(value);\n  };\n\n  return (\n    <div className={`input-field ${className}`}>\n      <span className=\"prefix\">{prefix}</span>\n      <input\n        id={id}\n        type={type}\n        value={value}\n        min={min}\n        max={max}\n        step={step}\n        onChange={handleOnChange}\n        placeholder={hint}\n        autoFocus={isFocused}\n      />\n      <span className=\"suffix\">{suffix}</span>\n      <label\n        htmlFor={id}\n        className={isFocused ? 'active' : undefined}\n        data-error={errorMessage}\n      >\n        {label}\n      </label>\n      <span data-error={errorMessage} data-success={sucessMessage}></span>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport InputData from '../input-data/InputData';\n\nexport default function SectionData({\n  montanteInicial,\n  taxaDeJuros,\n  periodo,\n  updateMontanteInicial,\n  updateTaxaDeJuros,\n  updatePeriodo,\n  doCalculate,\n}) {\n  const validationMaiorQueZero = (value) => +value > 0;\n  const handleClick = () => {\n    doCalculate();\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"row\">\n        <InputData\n          className=\"col s4\"\n          id=\"inputMontanteInicial\"\n          type=\"number\"\n          value={montanteInicial}\n          label=\"Montante Inicial:\"\n          min={1}\n          max={70000}\n          prefix=\"R$\"\n          isFocused={true}\n          handleInput={updateMontanteInicial}\n          validation={validationMaiorQueZero}\n          errorMessage=\"O valor do montante precisa estar entre 1 e 70000\"\n        />\n\n        <InputData\n          className=\"col s4\"\n          id=\"inputTaxaDeJuros\"\n          type=\"number\"\n          value={taxaDeJuros}\n          label=\"Taxa de Juros Mensal:\"\n          min={-12}\n          step={0.1}\n          max={12}\n          handleInput={updateTaxaDeJuros}\n          validation={validationMaiorQueZero}\n          errorMessage=\"O valor da taxa precisa estar entre -12 e 12\"\n        />\n\n        <InputData\n          className=\"col s4\"\n          id=\"inputPeriodo\"\n          type=\"number\"\n          value={periodo}\n          label=\"PerÃ­odo (meses):\"\n          min={1}\n          handleInput={updatePeriodo}\n          validation={validationMaiorQueZero}\n          errorMessage=\"O valor do montante precisa ser maior que zero\"\n        />\n      </div>\n      <div className=\"row\">\n        <div className=\"col s12\">\n          <button\n            className=\"waves-effect waves-light btn\"\n            style={styles.button}\n            onClick={handleClick}\n          >\n            Calcular\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  button: {\n    width: '100%',\n  },\n};\n","const calculate = (capital, juros, periodo) => {\n  juros = juros / 100;\n\n  return (capital * (1 + juros) ** periodo).toFixed(2);\n};\n\nconst calculateJuros = (totalAnterior, totalAtual) => {\n  return (((totalAtual - totalAnterior) / totalAnterior) * 100).toFixed(2);\n};\n\nexport { calculate, calculateJuros };\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport M from 'materialize-css';\n\nimport ResultCard from './components/result-card/ResultCard';\nimport SectionData from './components/section-data/SectionData';\nimport { calculate, calculateJuros } from './helper/calculate';\n\nexport default function App() {\n  const [montanteInicial, setMontanteInicial] = useState(0);\n  // const [valorTotal, setValorTotal] = useState(0);\n  const [taxaDeJuros, setTaxaDeJuros] = useState(0);\n  const [periodo, setPeriodo] = useState(0);\n  const [sobreJuros, setSobreJuros] = useState([]);\n\n  const doCalculate = () => {\n    let result = [];\n    for (let mes = 1; mes <= periodo; mes++) {\n      const valorTotal = calculate(montanteInicial, taxaDeJuros, mes);\n      console.log(`mes: ${mes} - valorTotal: ${valorTotal}`);\n      const valorJuros = (valorTotal - montanteInicial).toFixed(2);\n      console.log(`mes: ${mes} - valor Juros: ${valorJuros}`);\n      const percentual = calculateJuros(montanteInicial, valorTotal);\n      console.log(`mes: ${mes} - percentual: ${percentual}`);\n      result = [...result, { mes, valorTotal, valorJuros, percentual }];\n    }\n    setSobreJuros([...result]);\n  };\n\n  const updateMontanteInicial = useCallback((value) => {\n    setMontanteInicial(value);\n  }, []);\n\n  const updateTaxaDeJuros = useCallback((value) => {\n    setTaxaDeJuros(value);\n  }, []);\n\n  const updatePeriodo = useCallback((value) => {\n    setPeriodo(value);\n  }, []);\n\n  useEffect(() => {\n    M.AutoInit();\n  }, []);\n\n  useEffect(() => {\n    doCalculate();\n  }, [montanteInicial, taxaDeJuros, periodo]);\n\n  // useEffect(() => {\n  //   doCalculate(montanteInicial, taxaDeJuros, periodo);\n  // }, [doCalculate, montanteInicial, taxaDeJuros, periodo]);\n\n  // const calculateCallback = useCallback(() => {\n  //   doCalculate(montanteInicial, taxaDeJuros, periodo);\n  // }, [doCalculate, montanteInicial, taxaDeJuros, periodo]);\n  return (\n    <div className=\"container\">\n      <h1 className=\"center\">React - Juros Compostos</h1>\n      <SectionData\n        montanteInicial={montanteInicial}\n        taxaDeJuros={taxaDeJuros}\n        periodo={periodo}\n        updateMontanteInicial={updateMontanteInicial}\n        updateTaxaDeJuros={updateTaxaDeJuros}\n        updatePeriodo={updatePeriodo}\n        doCalculate={doCalculate}\n      />\n      <div className=\"row\">\n        {sobreJuros.map((juros, index) => {\n          return (\n            <div key={index} className=\"col s3\">\n              <ResultCard juros={juros} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}